%meta{content: "text/html; charset=UTF-8", "http-equiv" => "Content-Type"}/
%meta{charset: "utf-8"}/
%meta{content: "width=device-width, initial-scale=1", name: "viewport"}/
%title= content_for?(:title) ? yield(:title) : "ImageGallery"
= csrf_meta_tags
= csp_meta_tag
= stylesheet_link_tag 'home_slider'
= javascript_include_tag 'application'
= stylesheet_link_tag "application", "data-turbo-track": "reload"
= stylesheet_link_tag "main", media: "all", "data-turbo-track": "reload"
= javascript_importmap_tags
%link{href: "https://fonts.googleapis.com/css2?family=Playfair+Display:wght@400;700&family=Roboto:wght@400;500&display=swap", rel: "stylesheet"}/
%link{href: "https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css", rel: "stylesheet", integrity: "sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH", crossorigin: "anonymous"}/
%link{href: "https://unpkg.com/filepond/dist/filepond.css", rel: "stylesheet"}/
%script{src: "https://code.jquery.com/jquery-3.7.1.min.js", integrity: "sha256-/JqT3SQfawRcv/BIHPThkBvs0OEvtFFmqPF/lYI/Cxo=", crossorigin: "anonymous"}
%script{src: "https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js", integrity: "sha384-YvpcrYf0tY3lHB60NNkmXc5s9fDVZLESaAA55NDzOxhy9GkcIdslK1eN7N6jIeHz", crossorigin: "anonymous"}
%link{href: "https://cdn.jsdelivr.net/npm/glightbox/dist/css/glightbox.min.css", rel: "stylesheet"}/
%script{src: "https://cdn.jsdelivr.net/gh/mcstudios/glightbox/dist/js/glightbox.min.js"} 
%link{href: "https://cdn.jsdelivr.net/npm/swiper@11.1.9/swiper-bundle.min.css", rel: "stylesheet"}/
%script{src: "https://cdn.jsdelivr.net/npm/swiper@11.1.9/swiper-bundle.min.js"} 
%link{href: "https://cdn.jsdelivr.net/npm/aos@2.3.4/dist/aos.css", rel: "stylesheet"}/
%script{src: "https://cdn.jsdelivr.net/npm/aos@2.3.4/dist/aos.js", defer: true}
%link{rel: "stylesheet", href: "https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.3/font/bootstrap-icons.css"}/

:javascript
  document.addEventListener("DOMContentLoaded", function() {
    AOS.init();
  });

  function switchLanguage(locale, event) {
    if (event) {
      event.preventDefault();
      event.stopPropagation();
    }

    console.log('Switching to locale:', locale);

    fetch('/switch_locale/' + locale, {
      method: 'GET',
      headers: {
        'X-Requested-With': 'XMLHttpRequest'
      }
    }).then(response => {
      console.log('Response status:', response.status);
      return response.json();
    })
    .then(data => {
      console.log('Response data:', data);

      if (data.status === 'success') {
        // Обновляем кнопку языка
        document.querySelector('.dropdown-toggle').innerHTML = '<i class="bi bi-globe"></i> ' + locale.toUpperCase();

        // Обновляем активный класс
        document.querySelectorAll('.dropdown-item').forEach(item => {
          item.classList.remove('active');
        });

        // Добавляем активный класс к выбранному элементу
        if (event && event.target) {
          event.target.classList.add('active');
        }

        // Обновляем переводы на странице
        updatePageTranslations(data.translations);

        console.log('Language switched successfully');
      } else {
        console.error('Failed to switch language');
      }
    })
    .catch(error => {
      console.error('Error switching language:', error);
    });

    return false;
  }

  function updatePageTranslations(translations) {
    console.log('Updating translations:', translations);

    // Обновляем заголовок галереи
    const galleryTitle = document.querySelector('h2.mb-4');
    console.log('Gallery title element:', galleryTitle);
    if (galleryTitle && translations.gallery_title) {
      galleryTitle.textContent = translations.gallery_title;
      console.log('Updated gallery title to:', translations.gallery_title);
    }

    // Обновляем навигацию
    const navLinks = document.querySelectorAll('.navmenu a');
    console.log('Found nav links:', navLinks.length);

    if (translations.navigation) {
      navLinks.forEach((link, index) => {
        const href = link.getAttribute('href');
        console.log(`Link ${index}: href=${href}, text=${link.textContent}`);

        if (href && href.includes('starter_page') && translations.navigation.home) {
          link.textContent = translations.navigation.home;
          console.log('Updated home link');
        } else if (href && href.includes('profile') && translations.navigation.profile) {
          link.textContent = translations.navigation.profile;
          console.log('Updated profile link');
        } else if (href && href.includes('about') && translations.navigation.about) {
          link.textContent = translations.navigation.about;
          console.log('Updated about link');
        } else if (href && href.includes('gallery') && translations.navigation.categories) {
          const span = link.querySelector('span');
          if (span) {
            span.textContent = translations.navigation.categories;
            console.log('Updated categories link');
          }
        } else if (href && href.includes('services') && translations.navigation.services) {
          link.textContent = translations.navigation.services;
          console.log('Updated services link');
        } else if (href && href.includes('contact') && translations.navigation.contact) {
          link.textContent = translations.navigation.contact;
          console.log('Updated contact link');
        }
      });
    }
  }

/ Favicons
%link{href: asset_path("favicon.png"), rel: "icon"}/
%link{href: asset_path("apple-touch-icon.png"), rel: "apple-touch-icon"}/

/ Fonts
%link{href: "https://fonts.googleapis.com", rel: "preconnect"}/
%link{crossorigin: "", href: "https://fonts.gstatic.com", rel: "preconnect"}/
%link{href: "https://fonts.googleapis.com/css2?family=Roboto:ital,wght@0,100;0,300;0,400;0,500;0,700;0,900;1,100;1,300;1,400;1,500;1,700;1,900&family=Inter:wght@100;200;300;400;500;600;700;800;900&family=Cardo:ital,wght@0,400;0,700;1,400;1,700&display=swap", rel: "stylesheet"}/

/ Hexagon Gallery Styles
:css
  .grid-gallery {
    --size: 100px;
    display: grid;
    grid-template-columns: repeat(6, var(--size));
    grid-auto-rows: var(--size);
    gap: 5px;
    place-items: start center;
    margin: 0 auto var(--size) auto;
    justify-content: center;
    max-width: calc(var(--size) * 6 + 25px);
  }

  .grid-gallery img {
    width: calc(var(--size) * 2);
    height: calc(var(--size) * 2);
    object-fit: cover;
    grid-column: auto / span 2;
    border-radius: 5px;
    clip-path: path("M90,10 C100,0 100,0 110,10 190,90 190,90 190,90 200,100 200,100 190,110 190,110 110,190 110,190 100,200 100,200 90,190 90,190 10,110 10,110 0,100 0,100 10,90Z");
    transition: clip-path 0.25s, filter 0.75s;
  }

  .grid-gallery img:nth-child(5n - 1),
  .grid-gallery img.shifted {
    grid-column: 2 / span 2;
  }

  .grid-gallery img:hover {
    clip-path: path("M0,0 C0,0 200,0 200,0 200,0 200,100 200,100 200,100 200,200 200,200 200,200 100,200 100,200 100,200 100,200 0,200 0,200 0,100 0,100 0,100 0,100 0,100Z");
    transition: clip-path 0.25s, filter 0.25s;
    z-index: 1;
    transform: scale(1.05);
  }

  .grid-gallery img:focus {
    outline: 1px dashed black;
    outline-offset: -5px;
  }

  .grid-gallery:hover img:not(:hover) {
    filter: brightness(0.5) contrast(0.5);
    transition: filter 0.3s ease;
  }

  .grid-gallery img:hover {
    filter: brightness(1) contrast(1);
  }

  /* Language dropdown styles */
  .dropdown-menu-dark {
    background-color: #212529 !important;
    border: 1px solid #495057 !important;
    box-shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.5) !important;
  }

  .dropdown-item.text-light {
    color: #f8f9fa !important;
  }

  .dropdown-item.text-light:hover,
  .dropdown-item.text-light:focus {
    background-color: #495057 !important;
    color: #ffffff !important;
  }

  .dropdown-item.text-light.active {
    background-color: #0d6efd !important;
    color: #ffffff !important;
  }

  .btn-outline-light {
    color: #f8f9fa !important;
    border-color: #f8f9fa !important;
    background-color: transparent !important;
  }

  .btn-outline-light:hover,
  .btn-outline-light:focus,
  .btn-outline-light:active,
  .btn-outline-light.show {
    background-color: rgba(248, 249, 250, 0.1) !important;
    color: #f8f9fa !important;
    border-color: #f8f9fa !important;
  }

  .btn-outline-light:not(:disabled):not(.disabled):active,
  .btn-outline-light:not(:disabled):not(.disabled).active {
    background-color: rgba(248, 249, 250, 0.1) !important;
    color: #f8f9fa !important;
    border-color: #f8f9fa !important;
  }

  /* Fix navigation styles */
  .header .logo {
    text-decoration: none !important;
  }

  .header .logo:hover {
    text-decoration: none !important;
  }

  .header .navmenu a {
    text-decoration: none !important;
  }

  .header .navmenu a:hover {
    text-decoration: none !important;
  }

  .header .logo i {
    color: #ffffff !important;
  }

  /* Force dark background and white text */
  body {
    background-color: #000000 !important;
  }

  h2.mb-4 {
    color: #ffffff !important;
  }

  /* Glowing Border Effects */
  .glowing-border {
    --glow-deg: 0deg;
    --gradient-glow: #ff6b6b, #ffd93d, #6bcf7f, #4d96ff, #9c88ff, #ff6b6b;
    --border-width: 3px;
    --glow-size: 1rem;
    --glow-intensity: 0.125;

    margin-block: 3rem;
    padding: 4rem 3rem;
    max-width: 60ch;

    border: var(--border-width) solid transparent;
    border-left: 0;
    border-radius: 0 100vw 100vw 0;
    background: linear-gradient(rgba(26, 26, 26, 0.8) 0 0) padding-box,
      conic-gradient(from var(--glow-deg), var(--gradient-glow)) border-box;

    position: relative;
    isolation: isolate;
    color: #f8f9fa;

    animation: glow 10s infinite linear;
  }

  @keyframes glow {
    100% {
      --glow-deg: 360deg;
    }
  }

  .glowing-border::before,
  .glowing-border::after {
    content: "";
    position: absolute;
    border-radius: inherit;
  }

  .glowing-border::before {
    z-index: -1;
    background: rgba(26, 26, 26, 0.9);
    inset: 0.5rem;
    scale: 1.2 1;
    transform-origin: right;
    filter: blur(var(--glow-size));
  }

  .glowing-border::after {
    z-index: -2;
    inset: -1.5rem;
    background: conic-gradient(from var(--glow-deg), var(--gradient-glow));
    filter: blur(var(--glow-size));
    opacity: var(--glow-intensity);
  }

  .glowing-border.right {
    margin-inline-start: auto;
    border-radius: 100vw 0 0 100vw;
    border: var(--border-width) solid transparent;
    border-right: 0;
  }

  .glowing-border.right::before {
    transform-origin: left;
  }

  .glowing-border h1 {
    margin-bottom: 1rem;
    font-size: 2.5rem;
    font-weight: bold;
    color: #ffffff;
  }

  .glowing-border p {
    margin: 0;
    line-height: 1.6;
    color: #e9ecef;
  }


